% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_chat.R
\name{parse_chat}
\alias{parse_chat}
\title{Parsing exported WhatsApp Textfiles as a Dataframe}
\usage{
parse_chat(
  name,
  EmojiDic = "internal",
  smilies = 2,
  anon = "add",
  media = TRUE,
  web = "domain",
  order = "both",
  language = "german",
  os = "android",
  rpnl = " start_newline ",
  rpom = " media_omitted ",
  ...
)
}
\arguments{
\item{name}{the name of the exported Whatsapp textfile to be parsed as a character string}

\item{EmojiDic}{Dictionary for Emoji matching. Can use a version included in this package when set to "interal" or
an updated dataframe created by \code{\link[WhatsR]{download_emoji}}}

\item{smilies}{1 uses \code{\link[qdapRegex]{ex_emoticon}} to extract smilies, 2 uses a more inclusive custom list
of smilies containing all mentions from https://de.wiktionary.org/w/index.php?title=Verzeichnis:International/Smileys
and manually added ones}

\item{anon}{TRUE results in the vector of sender names being anonymized, FALSE displays the actual names, "add" adds a
column of anomyized names next to the actual names}

\item{media}{TRUE/FALSE indicates whether the chatlog was downloaded with or without mediafiles. If TRUE, names of
attached mediafiles will be extracted into a seperate column.}

\item{web}{"domain" will shorten sent links to domains, "url" will display the full URL}

\item{order}{determines how the messages are ordered. "display" orders them in the same order that they appear on the phone
that the messages were exported from. "time" orders the messages according to the WhatsApp Timestamp the message received while it was sent.
Due to internet problems, these orders are not necessarily interchangeable. "both" gives two columns with the respective orders}

\item{language}{Indicates the language of WhatsApp on the phone with which the messages were exported. This is important because
it changes the structure of date/time columns and indicators for sent media. Currently, "english" and "german" are available.}

\item{os}{operating system of the phone the chat was exported from. Supports "android" or "iOS"}

\item{rpnl}{Replace newline. A character string for replacing linebreaks within messages for the parsed message for better readibility. Default is " start_newline "}

\item{rpom}{Replace omitted media. A character string replacing the indicator for omitted media files for better readibility. Default is " media_omitted "}

\item{...}{Further arguments passed down to ReplaceEmoji()}
}
\value{
A dataframe containing:

     1) A column to indicate the date and time when the message was send \cr
     2) A column containing the anonimized name of the sender \cr
     3) A column to indicate the name of the sender \cr
     4) A column containing the raw message body (Emoji are replaced with textual representation) \cr
     5) A column containgin a "flat" message, stripped of Emoji, numbers, special characters, file attachments, sent Locations etc. \cr
     6) A column containing a tokenized version of the flat message \cr
     7) A column containing only URLs that were contained in the messages (optional: can be shortend to only display domains) \cr
     8) A column containing only the names of attached meda files \cr
     9) A column containing only sent locations and indicators for shared live locations \cr
     10) A column containing only Emoji that were used in the message \cr
     11) A column containing only Emoticons (e.g. ":-)") that were used in the message \cr
     12) A column containing the number of tokens per message, derived from the "flattened" message \cr
     13) A column containing WhatsApp System Messages in group chats (e.g."You added Frank to the group") \cr
     14) A column specifying the order of the rows according to the timestamp the messages have on the phone used for extracting the chatlog \cr
     15) A column for specifying the order of the rows as they are displayed on the phone used for extracting the chatlog \cr
}
\description{
Creates a dataframe from an exported WhatsApp textfile containing one row per message. Some columns
are saved as lists using the I() function so that multiple elements can be stored per message, while still maintaining
the general structure of one row per message. These columns should be trated as lists or unlisted first.
}
\examples{
data <- parse_chat(system.file("englishandroid24h.txt", package = "WhatsR"),
                      media = TRUE,
                      language = "english")
}
